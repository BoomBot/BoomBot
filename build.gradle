plugins {
    id "com.jfrog.bintray" version "1.7.3"
    id 'java'
    id 'maven'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '1.2.3'
}

repositories {
    mavenCentral()
    jcenter()
}

group = "${group}"
archivesBaseName = "${archiveName}"
version = "${releaseVersion}"

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile "net.dv8tion:JDA:${jdaVersion}"
    compile "com.google.code.gson:gson:${gsonVersion}"
    compile "com.google.guava:guava:${guavaVersion}"
    compile "commons-io:commons-io:${commonsIOVersion}"
    compile "org.apache.commons:commons-lang3:${commonsLangVersion}"
}

jar {
    manifest  {
        attributes 'Main-Class' : "${mainClass}"
    }
}

shadowJar {
    classifier = "withDependencies"
}

task sourceJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

bintray {
    user = bintrayUser
    key = bintrayApiKey
    publications = ["BintrayRelease"]
    pkg {
        repo = 'maven'
        name = archivesBaseName
        licenses = ['LGPL-3.0']
        vcsUrl = "https://github.com/BoomBot/BoomBot.git"
        publish true
        version {
            name = releaseVersion
            released = new Date()
        }
    }
}

def pomConfig = {
    licenses {
        license {
            name "GNU Lesser General Public License"
            url "https://www.gnu.org/licenses/lgpl-3.0.txt"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "lomeli12"
            name "Lomeli12"
            email "anthony@lomeli12.net"
        }
    }
}

publishing {
    publications {
        BintrayRelease(MavenPublication) {
            from components.java
            groupId group
            artifactId archivesBaseName
            version releaseVersion
            artifact sourceJar
            artifact javadocJar
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'A simple Discord Bot')
                root.appendNode('name', 'BoomBot')
                root.appendNode('url', 'https://boombot.github.io/')
                root.children().last() + pomConfig
            }
        }
    }
}

bintrayUpload {
    dependsOn build
}

tasks.withType(Zip) { task ->
    task.doLast {
        ant.checksum algorithm: 'MD5', file: it.archivePath
        ant.checksum algorithm: 'SHA1', file: it.archivePath
    }
}

build {
    dependsOn clean
    dependsOn jar
    dependsOn javadocJar
    dependsOn sourceJar
    dependsOn shadowJar

    jar.mustRunAfter clean
    javadocJar.mustRunAfter jar
    sourceJar.mustRunAfter javadocJar
    shadowJar.mustRunAfter sourceJar

}